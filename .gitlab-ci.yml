stages: 
- sonar

variables:
  JDK_IMAGE_VER: "$DOCK_JDK_VER"

#=================== Sonar Stage ===================
.sonar-template: &sonar-definition
  stage: sonar
  tags:
    - docker
  when: always
  before_script:
    - cp -R /home/repository/binaries.sonarsource.com/sonar-scanner-cli/$SONAR_CLI_VER sonar-scanner
  script: 
    - |
      docker build \
      --build-arg DOCK_JDK_VER="$JDK_IMAGE_VER" \
      --build-arg SONAR_HOST_URL="$SONAR_HOST_URL" \
      --build-arg SONAR_AUTH_TOKEN="$SONAR_AUTH_TOKEN" \
      --build-arg SONAR_SCANNER_OPTS="$SONAR_SCANNER_OPTS" \
      --build-arg SONAR_RUNNER_HOME="$SONAR_RUNNER_HOME" \
      --build-arg SONAR_AUTH_KEY="$CI_PROJECT_PATH_SLUG" \
      --build-arg SONAR_PROJ_NAME="$CI_PROJECT_PATH" \
      --build-arg CI_COMMIT_SHA="$CI_COMMIT_SHA" \
      --build-arg CI_COMMIT_REF_NAME="$REPORT_REF_NAME" \
      --build-arg CI_PROJECT_ID="$CI_PROJECT_ID" \
      --build-arg CI_DISABLE_REPORT="$REPORT_DISABLE" \
      --build-arg CI_ALLISSUE_REPORT="$REPORT_ALLISSUE" \
      --build-arg CI_MERGE_REQUEST_IID="$CI_MERGE_REQUEST_IID" \
      -f Dockerfile.$REPORT_ENV \
      -t $REPORT_ENV .
    - docker image rm -f $REPORT_ENV
    - echo "$REPORT_ENV DONE"

sonar-inline:
  <<: *sonar-definition
  variables:
    REPORT_ENV: "sonar-gategit-report"
    REPORT_DISABLE: "sonar.gitlab.disable_global_comment"
    REPORT_ALLISSUE: "false"
    REPORT_REF_NAME: "$CI_COMMIT_REF_NAME"
### OTHER EXTEND IF USING MERGE REQUEST PROSEDUR
#    REPORT_REF_NAME: "$CI_MERGE_REQUEST_REF_PATH"
#  only:
#    - merge_request
###
  except:
    - develop
    - sandbox
    - staging
    - master

sonar-global:
  <<: *sonar-definition
  variables:
    REPORT_ENV: "sonar-sonarqube-report"
    REPORT_ALLISSUE: "true"
    REPORT_REF_NAME: "$CI_COMMIT_REF_NAME"
  only:
    - develop
    - master
